---
- hosts: localhost
  gather_facts: false
  become: no
  vars: 
    ansible_connection: local

  vars_files:
    # Contains encrypted `engine_password` varibale using ansible-vault
    - "{{ playbook_dir }}/config.yaml"

  tasks: 
    - block:
      - name: Obtain SSO token with using username/password credentials
        ovirt.ovirt.ovirt_auth:
          url: "{{ ovirt_url }}"
          insecure: yes
          username: "{{ ovirt_username }}"
          password: "{{ ovirt_password }}"

      - name: Show all the hosts in the inventory
        ansible.builtin.debug:
          msg: "{{ hostvars[item].inventory_hostname }} {{ hostvars[item].ansible_hostname }} {{ hostvars[item].ansible_host }} "
        loop: "{{ groups['all'] }}"

      - name: "{{ vm_state }} a Virtual Machine from template" 
        ovirt.ovirt.ovirt_vm:
          auth: "{{ ovirt_auth }}"
          state: "{{ vm_state }}" 
          name: "{{ vm_prefix }}{{ hostvars[item].inventory_hostname }}"
          template: centos79-template-cloudinit
          cluster: PST_CL
          delete_protected: no
          description: VirtualMachine using Ansible
          comment: "IP : {{ hostvars[item].ansible_host }}, HOSTNAME : {{ hostvars[item].ansible_hostname }}"
          memory: 8GiB
          cpu_cores: 4
          cpu_sockets: 2 
          cpu_threads: 1
          cloud_init_persist: yes
          cloud_init:
            dns_servers: '8.8.8.8 8.8.4.4'
            nic_boot_protocol: static
            nic_ip_address: "{{ hostvars[item].ansible_host }}"
            nic_netmask: 255.255.255.0
            nic_gateway: 10.65.40.1
            nic_name: eth0
            host_name: "{{ hostvars[item].ansible_hostname }}"
            custom_script: |
              write_files:
              - content: |
                  Hello, world!
                path: /tmp/greeting.txt
                permissions: '0644'
            user_name: ssong
  #          root_password: super_password
            authorized_ssh_keys: "{{ vm_auth_key }}" 
        async: 300
        poll: 5
        loop: "{{ groups['all'] }}" 

      - name: "{{ disk_state }} a disk to VM"
        ovirt.ovirt.ovirt_disk: 
          auth: "{{ ovirt_auth }}"
          state: "{{ disk_state }}" 
          name: "{{ vm_prefix }}{{ hostvars[item].inventory_hostname }}-disk"
          vm_name: "{{ vm_prefix }}{{ hostvars[item].inventory_hostname }}"
          size: 100GiB
          format: cow
          interface: virtio_scsi
          storage_domain: 00_STORAGE_SAN
        async: 60
        poll: 5
        when: "hostvars[item].disk_used is defined"
        loop: "{{ groups['all'] }}"  

      always:
        - name: Always revoke the SSO token
          ovirt_auth:
            state: absent
            ovirt_auth: "{{ ovirt_auth }}"

  collections:
    - ovirt.ovirt  